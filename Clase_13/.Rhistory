knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(ggplot2)
library(dplyr)
library(multcomp)
snp.data <- read_excel("snp.data.xlsx")
snp.data$Sex <- as.factor(snp.data$Sex)
summary(snp.data)
table(snp.data$Sex, snp.data$Geno)
tapply(snp.data$weight, factor(snp.data$Geno), mean)
tapply(snp.data$weight, factor(snp.data$Sex), mean)
ggplot(snp.data, aes(x=weight))+
geom_histogram(color="darkblue", fill="lightblue")
ggplot(snp.data, aes(x=weight))+
geom_histogram(color="darkblue", fill="lightblue", bins = 12)
p <- ggplot(snp.data, aes(x = Geno, y = weight))
p + geom_point() + xlab("Reference allele count") + geom_smooth(method=lm)
lm.geno <- lm(weight ~ Geno, data = snp.data)
summary(lm.geno)
predict.lm(lm.geno, newdata=data.frame(Geno=c(0,1,2)), interval="confidence")
predict.lm(lm.geno, newdata=data.frame(Geno=c(0,1,2)), interval="prediction")
# anova suponiendo varianzas iguales
anova(lm.geno)
# anova suponiendo varianzas diferentes
oneway.test(weight ~ Geno, data = snp.data)
lm.geno2 <- lm(weight ~ -1 + factor(Geno), data = snp.data)
summary(lm.geno2)
summary(lm.geno)
# Elabora matriz de contrastes para el factor Geno
contrastes = contrMat(table(snp.data$Geno), type="Tukey")
# Realiza comparaciones multiples
mc2 = glht(lm.geno2, linfct =contrastes)
summary(mc2, test=adjusted("bonferroni"))
q <- ggplot(snp.data, aes(x = Geno, y = weight, shape=Sex, color=Sex))
q + geom_point() + xlab("Reference allele count") + geom_smooth(method=lm)
lm.geno.sex <- lm(weight ~ Geno + Sex, data = snp.data)
summary(lm.geno.sex)
plot.design(snp.data$weight ~ factor(snp.data$Geno) + factor(snp.data$Sex))
interaction.plot(factor(snp.data$Geno), factor(snp.data$Sex), snp.data$weight, mean)
lm.qtl <- lm(weight ~ factor(Geno) * factor(Sex), data = snp.data)
summary(lm.qtl)
shapiro.test (residuals (lm.qtl))
plot(lm.qtl, which = 2)
plot(lm.qtl, which = 1)
