rm(list=ls())
library(readxl)
library(xlsx)
library(tidyverse)
library(kinship2)
library(visPedigree)
setwd("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/CRUZAMIENTOS/2022")
ped_ly19 <- read.delim("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/CRUZAMIENTOS/2022/ped_ly19.txt")
ped_ly19 <- mutate_if(ped_ly19, is.character, toupper)
Hembras <- read_excel("LY19cruza1_300522.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Machos <- read_excel("LY19cruza1_30052.xlsx", sheet = "Machos Stock", col_types = c("numeric","numeric", "text", "date", "text", "text", "text", "text"))
Hembras <- read_excel("LY19cruza1_300522.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Machos <- read_excel("LY19cruza1_300522.xlsx", sheet = "Machos Stock", col_types = c("numeric","numeric", "text", "date", "text", "text", "text", "text"))
View(Hembras)
View(Machos)
ped_ly19 <- read.delim("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/CRUZAMIENTOS/2022/ped_ly19.txt")
ped_ly19 <- mutate_if(ped_ly19, is.character, toupper)
Hembras <- read_excel("LY19cruza1_300522.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Machos <- read_excel("LY19cruza1_300522.xlsx", sheet = "Machos Stock", col_types = c("numeric","numeric", "text", "date", "text", "text", "text", "text"))
View(Machos)
View(ped_ly19)
View(ped_ly19)
ped_ly19 <- read.csv("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/CRUZAMIENTOS/2022/ped_ly19.txt")
View(ped_ly19)
ped_ly19 <- read.csv("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/CRUZAMIENTOS/2022/ped_ly19.txt")
ped_ly19 <- mutate_if(ped_ly19, is.character, toupper)
Hembras <- read_excel("LY19cruza1_300522.xlsx", sheet = "Cruzas", col_types = c("numeric", "numeric", "date", "text", "text", "numeric", "numeric", "numeric","numeric", "numeric"))
Machos <- read_excel("LY19cruza1_300522.xlsx", sheet = "Machos Stock", col_types = c("numeric","numeric", "text", "date", "text", "text", "text", "text"))
View(Machos)
View(Hembras)
animal_m <- Machos$ANIMAL
animal_h <- Hembras$ANIMAL
m <- ped_fd19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
animal_m <- Machos$ANIMAL
animal_h <- Hembras$ANIMAL
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped <- bind_rows(m, h)
animal_m <- Machos$`ANIMAL Macho`
animal_h <- Hembras$`ANIMAL Hembra`
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped <- bind_rows(m, h)
View(h)
View(m)
animal_m <- ped$PADRE
animal_h <- ped$MADRE
m <- ped_fd19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
animal_m <- ped$PADRE
animal_h <- ped$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped1 <- bind_rows(m, h)
View(ped1)
View(ped)
View(ped1)
animal_m <- ped1$PADRE
animal_h <- ped1$MADRE
animal_h
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
m1 <- as.data.frame("2011_0006D6F662", "2011_0006D2A90C", "2011_0006D2A90C","2012_0006F3E567","2012_0006F03C82")
animal_m <- ped1$PADRE
animal_h <- ped1$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
m1 <- as.data.frame("2011_0006D6F662","2011_0006D2A90C","2011_0006D2A90C","2012_0006F3E567","2012_0006F03C82")
animal_m <- ped1$PADRE
animal_h <- ped1$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
m1 <- as.data.frame(c("2011_0006D6F662","2011_0006D2A90C","2011_0006D2A90C","2012_0006F3E567","2012_0006F03C82"))
colnames(m1) <- "ANIMAL"
m1 <- m1 %>% add_column(PADRE = NA)
m1 <- m1 %>% add_column(MADRE = NA)
m1 <- m1 %>% add_column(Sexo = 1)
ped2 <- bind_rows(m, m1, h)
ped2 %>% distinct(ANIMAL, .keep_all = TRUE)
View(ped2)
animal_m <- ped2$PADRE
animal_h <- ped2$MADRE
m <- ped_fd19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
animal_m <- ped2$PADRE
animal_h <- ped2$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped3 <- bind_rows(m, h)
ped3 %>% distinct(ANIMAL, .keep_all = TRUE)
View(ped3)
animal_m <- ped3$PADRE
animal_h <- ped3$MADRE
m <- ped_fd19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
animal_m <- ped3$PADRE
animal_h <- ped3$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
View(h)
View(m)
animal_m <- ped3$PADRE
animal_h <- ped3$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped4 <- bind_rows(m, h)
ped4 %>% distinct(ANIMAL, .keep_all = TRUE)
View(ped4)
animal_m <- ped4$PADRE
animal_h <- ped4$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
m <- as.data.frame(animal_m)
colnames(m) <- "ANIMAL"
m <- m %>% distinct(ANIMAL, .keep_all = TRUE)
m <- m %>% add_column(PADRE = NA)
m <- m %>% add_column(MADRE = NA)
m <- m %>% add_column(Sexo = 1)
h <- as.data.frame(animal_h)
colnames(h) <- "ANIMAL"
h <- h %>% distinct(ANIMAL, .keep_all = TRUE)
h <- h %>% add_column(PADRE = NA)
h <- h %>% add_column(MADRE = NA)
h <- h %>% add_column(Sexo = 2)
ped5 <- bind_rows(m, h)
ped5 %>% distinct(ANIMAL, .keep_all = TRUE)
ped_ly10_kinship_300522 <- bind_rows(ped5, ped4,ped3,ped2, ped1, ped)
head(ped_ly10_kinship_300522)
tail(ped_ly10_kinship_300522)
nrow(ped_ly10_kinship_300522)
tidy_ped <- tidyped(ped_ly10_kinship_300522)
visped(tidy_ped,compact = TRUE, outline=TRUE, showgraph=TRUE, file="ped_ly10_kinship_300522.pdf")
PED <- ped_ly10_kinship_300522
ped<-pedigree(id=PED$ANIMAL, dadid=PED$PADRE, momid=PED$MADRE, sex=PED$Sexo)
View(PED)
View(PED)
PED <- ped_ly10_kinship_300522
ped<-pedigree(id=PED$ANIMAL, dadid=PED$PADRE, momid=PED$MADRE, sex=PED$Sexo)
View(ped)
View(ped1)
View(ped2)
animal_m <- ped1$PADRE
animal_h <- ped1$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
m1 <- as.data.frame(c("2011_0006D6F662","2011_0006D2A90C","2012_0006F3E567","2012_0006F03C82"))
colnames(m1) <- "ANIMAL"
m1 <- m1 %>% add_column(PADRE = NA)
m1 <- m1 %>% add_column(MADRE = NA)
m1 <- m1 %>% add_column(Sexo = 1)
ped2 <- bind_rows(m, m1, h)
ped2 %>% distinct(ANIMAL, .keep_all = TRUE)
animal_m <- ped2$PADRE
animal_h <- ped2$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped3 <- bind_rows(m, h)
ped3 %>% distinct(ANIMAL, .keep_all = TRUE)
animal_m <- ped3$PADRE
animal_h <- ped3$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
ped4 <- bind_rows(m, h)
ped4 %>% distinct(ANIMAL, .keep_all = TRUE)
animal_m <- ped4$PADRE
animal_h <- ped4$MADRE
m <- ped_ly19 %>% filter(ANIMAL %in% animal_m) %>% mutate(Sexo=1)
h <- ped_ly19 %>% filter(ANIMAL %in% animal_h) %>% mutate(Sexo=2)
m <- as.data.frame(animal_m)
colnames(m) <- "ANIMAL"
m <- m %>% distinct(ANIMAL, .keep_all = TRUE)
m <- m %>% add_column(PADRE = NA)
m <- m %>% add_column(MADRE = NA)
m <- m %>% add_column(Sexo = 1)
h <- as.data.frame(animal_h)
colnames(h) <- "ANIMAL"
h <- h %>% distinct(ANIMAL, .keep_all = TRUE)
h <- h %>% add_column(PADRE = NA)
h <- h %>% add_column(MADRE = NA)
h <- h %>% add_column(Sexo = 2)
ped5 <- bind_rows(m, h)
ped5 %>% distinct(ANIMAL, .keep_all = TRUE)
ped_ly10_kinship_300522 <- bind_rows(ped5, ped4,ped3,ped2, ped1, ped)
head(ped_ly10_kinship_300522)
tail(ped_ly10_kinship_300522)
nrow(ped_ly10_kinship_300522)
tidy_ped <- tidyped(ped_ly10_kinship_300522)
visped(tidy_ped,compact = TRUE, outline=TRUE, showgraph=TRUE, file="ped_ly10_kinship_300522.pdf")
PED <- ped_ly10_kinship_300522
ped<-pedigree(id=PED$ANIMAL, dadid=PED$PADRE, momid=PED$MADRE, sex=PED$Sexo)
kin1 <- kinship(ped)  # calcula coeficiente de coascendencia entre pares de animales
head(kin1)[c(1:5),c(1:5)]
write.xlsx(kin1, file = "Kinship_FD19cruza1_280422.xlsx", sheetName = "Kinship", append = FALSE)
knitr::opts_chunk$set(echo = FALSE)
library(pander)
library(dplyr)
library(readxl)
library(tidyr)
###########################################
#LLENAR LOS PARAMETROS DE CALCULO DE NOTA #
###########################################
exi=0.6
pje_max=32
exi_tot=exi*pje_max
##########################################
# Importa excel
prueba <- read_excel("EVALUACION_EDA.xlsx")
preguntas<-gather(data = prueba, key = "Pregunta", value = "Puntaje", 3:10)
# View (preguntas)
# Elimina mail del alumno
preguntas <- preguntas[-2]
# View(preguntas)
View(prueba)
View(preguntas)
#Sumatoria de puntaje por alumno
prueba$puntaje <- rowSums(prueba[-1:-2], na.rm = TRUE)
# Calculo de nota
prueba$nota <- round(ifelse(prueba$puntaje>=exi_tot,
3*(prueba$puntaje-exi_tot)/(pje_max*(1-exi))+4,
3*(prueba$puntaje/exi_tot)+1),1)
#Selecciona Alumno Nota y puntaje
Notas=(prueba[,-2:-10])
colnames(Notas)[3] <- "Nota"
colnames(Notas)[2] <- "Puntaje obtenido"
# Ordena notas por nombre
Notas<-Notas[order(Notas$Nombre), ]
# Imprime notas de todos los alumnos
# Notas %>% knitr::kable(caption = "Puntaje obtenido y nota de evaluación intermedia.")
# Imprime nota de un alumno en particular
#Hace el link con el loop del script de renderizacion
Notas2 <- subset(Notas, Nombre == nom)
View(Notas)
# Con esta tabla debería poder automatizar posteriormente el calculo de la nota
Item<- c("Nota máxima","Nota mínima","Nota aprobación","Exigencia para aprobar", "Puntaje máximo")
Valor<-c("7,0","1,0","4,0","60 %","32")
Parametros<-data.frame(Item, Valor)
Parametros %>% knitr::kable(caption = "Parámetros para el cálculo de la nota.")
# Esta tabla es informativa para todos los alumnos.
Nivel<- c("Excelente","Muy bueno","Bueno","Suficiente", "Insuficiente")
Puntaje<-c("4","3","2","1","0")
Parametros<-data.frame(Nivel, Puntaje)
Parametros %>% knitr::kable(caption = "Puntaje según nivel de logro alcanzado en cada pregunta o ejercicio.")
# Genera lista de alumnos
# Imprime el puntaje obtenido por cada alumno, ejemplo el 17.
alum <- subset(preguntas, Nombre == nom)
# Remueve objetos del ambiente de trabajo
rm(list=ls())
# comprobar la instalacion
tinytex:::is_tinytex()
library(rmarkdown)
library(readxl)
# Importa excel
prueba <- read_excel("EVALUACION_EDA.xlsx")
setwd("~/Dropbox/CURSOS/VINCULACION/DiplomadoR_Acuicultura_3v_2022/Evaluaciones/EDA")
# Importa excel
prueba <- read_excel("EVALUACION_EDA.xlsx")
Alumnos <-(prueba[,-2:-10])
View(Alumnos)
numero <-0
nume <-0
#Loop para cada alumno
for (nom in unique(Alumnos$Nombre)){
name = gsub(" ","_", nom)
numero=length(nom)
nume=numero+ nume
#Comando de rmarkdown, permite crear pdf a partir de archivo .Rmd
render("Evaluacion_EDA.Rmd", output_file =name)
}
View(alum)
# Remueve objetos del ambiente de trabajo
rm(list=ls())
# comprobar la instalacion
tinytex:::is_tinytex()
library(rmarkdown)
library(readxl)
library(tidyr)
# Importa excel
prueba <- read_excel("EVALUACION_EDA.xlsx")
Alumnos <-(prueba[,-2:-10])
numero <-0
nume <-0
#Loop para cada alumno
for (nom in unique(Alumnos$Nombre)){
name = gsub(" ","_", nom)
numero=length(nom)
nume=numero+ nume
#Comando de rmarkdown, permite crear pdf a partir de archivo .Rmd
render("Evaluacion_EDA.Rmd", output_file =name)
}
# Remueve objetos del ambiente de trabajo
rm(list=ls())
# comprobar la instalacion
tinytex:::is_tinytex()
library(rmarkdown)
library(readxl)
library(tidyr)
# Importa excel
prueba <- read_excel("EVALUACION_EDA.xlsx")
Alumnos <-(prueba[,-2:-10])
numero <-0
nume <-0
#Loop para cada alumno
for (nom in unique(Alumnos$Nombre)){
name = gsub(" ","_", nom)
numero=length(nom)
nume=numero+ nume
#Comando de rmarkdown, permite crear pdf a partir de archivo .Rmd
render("Evaluacion_EDA.Rmd", output_file =name)
}
knitr::opts_chunk$set(echo = FALSE)
library(pander)
library(dplyr)
library(readxl)
library(tidyr)
rm(list=ls())
###########################################
#LLENAR LOS PARAMETROS DE CALCULO DE NOTA #
###########################################
exi=0.6
pje_max=32
exi_tot=exi*pje_max
##########################################
# Importa excel
prueba <- read_excel("EVALUACION_EDA.xlsx")
preguntas<-gather(data = prueba, key = "Pregunta", value = "Puntaje", 4:11)
# View (preguntas)
# Elimina mail del alumno
preguntas <- preguntas[-2:-3]
# View(preguntas)
#Sumatoria de puntaje por alumno
prueba$puntaje <- rowSums(prueba[-1:-3], na.rm = TRUE)
# Calculo de nota
prueba$nota <- round(ifelse(prueba$puntaje>=exi_tot,
3*(prueba$puntaje-exi_tot)/(pje_max*(1-exi))+4,
3*(prueba$puntaje/exi_tot)+1),1)
#Selecciona Alumno Nota y puntaje
Notas=(prueba[,-2:-11])
colnames(Notas)[3] <- "Nota"
colnames(Notas)[2] <- "Puntaje obtenido"
# Ordena notas por nombre
Notas<-Notas[order(Notas$Nombre), ]
# Imprime notas de todos los alumnos
# Notas %>% knitr::kable(caption = "Puntaje obtenido y nota de evaluación intermedia.")
# Imprime nota de un alumno en particular
#Hace el link con el loop del script de renderizacion
Notas2 <- subset(Notas, Nombre == nom)
# Imprime notas de todos los alumnos
Notas %>% knitr::kable(caption = "Puntaje obtenido y nota de evaluación intermedia.")
